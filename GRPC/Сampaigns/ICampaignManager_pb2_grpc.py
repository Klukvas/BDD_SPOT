# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from GRPC.Ð¡ampaigns import ICampaignManager_pb2 as ICampaignManager__pb2
from GRPC.UsefulImport import empty_pb2 as empty__pb2


class CampaignManagerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.BlockUserInCampaign = channel.unary_unary(
                '/Service.BonusCampaign.Grpc.CampaignManager/BlockUserInCampaign',
                request_serializer=ICampaignManager__pb2.BlockUserRequest.SerializeToString,
                response_deserializer=ICampaignManager__pb2.OperationResponse.FromString,
                )
        self.CreateOrUpdateCampaign = channel.unary_unary(
                '/Service.BonusCampaign.Grpc.CampaignManager/CreateOrUpdateCampaign',
                request_serializer=ICampaignManager__pb2.CampaignGrpcModel.SerializeToString,
                response_deserializer=ICampaignManager__pb2.OperationResponse.FromString,
                )
        self.GetAllCampaigns = channel.unary_unary(
                '/Service.BonusCampaign.Grpc.CampaignManager/GetAllCampaigns',
                request_serializer=empty__pb2.Empty.SerializeToString,
                response_deserializer=ICampaignManager__pb2.GetAllCampaignsResponse.FromString,
                )
        self.GetAllParams = channel.unary_unary(
                '/Service.BonusCampaign.Grpc.CampaignManager/GetAllParams',
                request_serializer=empty__pb2.Empty.SerializeToString,
                response_deserializer=ICampaignManager__pb2.ParamsResponse.FromString,
                )
        self.GetContextsByCampaign = channel.unary_unary(
                '/Service.BonusCampaign.Grpc.CampaignManager/GetContextsByCampaign',
                request_serializer=ICampaignManager__pb2.GetContextsByCampaignRequest.SerializeToString,
                response_deserializer=ICampaignManager__pb2.GetContextsResponse.FromString,
                )
        self.GetContextsByClient = channel.unary_unary(
                '/Service.BonusCampaign.Grpc.CampaignManager/GetContextsByClient',
                request_serializer=ICampaignManager__pb2.GetContextsByClientRequest.SerializeToString,
                response_deserializer=ICampaignManager__pb2.GetContextsResponse.FromString,
                )
        self.UnblockUserInCampaign = channel.unary_unary(
                '/Service.BonusCampaign.Grpc.CampaignManager/UnblockUserInCampaign',
                request_serializer=ICampaignManager__pb2.BlockUserRequest.SerializeToString,
                response_deserializer=ICampaignManager__pb2.OperationResponse.FromString,
                )


class CampaignManagerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def BlockUserInCampaign(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateOrUpdateCampaign(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllCampaigns(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllParams(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetContextsByCampaign(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetContextsByClient(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnblockUserInCampaign(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CampaignManagerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'BlockUserInCampaign': grpc.unary_unary_rpc_method_handler(
                    servicer.BlockUserInCampaign,
                    request_deserializer=ICampaignManager__pb2.BlockUserRequest.FromString,
                    response_serializer=ICampaignManager__pb2.OperationResponse.SerializeToString,
            ),
            'CreateOrUpdateCampaign': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateOrUpdateCampaign,
                    request_deserializer=ICampaignManager__pb2.CampaignGrpcModel.FromString,
                    response_serializer=ICampaignManager__pb2.OperationResponse.SerializeToString,
            ),
            'GetAllCampaigns': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllCampaigns,
                    request_deserializer=empty__pb2.Empty.FromString,
                    response_serializer=ICampaignManager__pb2.GetAllCampaignsResponse.SerializeToString,
            ),
            'GetAllParams': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllParams,
                    request_deserializer=empty__pb2.Empty.FromString,
                    response_serializer=ICampaignManager__pb2.ParamsResponse.SerializeToString,
            ),
            'GetContextsByCampaign': grpc.unary_unary_rpc_method_handler(
                    servicer.GetContextsByCampaign,
                    request_deserializer=ICampaignManager__pb2.GetContextsByCampaignRequest.FromString,
                    response_serializer=ICampaignManager__pb2.GetContextsResponse.SerializeToString,
            ),
            'GetContextsByClient': grpc.unary_unary_rpc_method_handler(
                    servicer.GetContextsByClient,
                    request_deserializer=ICampaignManager__pb2.GetContextsByClientRequest.FromString,
                    response_serializer=ICampaignManager__pb2.GetContextsResponse.SerializeToString,
            ),
            'UnblockUserInCampaign': grpc.unary_unary_rpc_method_handler(
                    servicer.UnblockUserInCampaign,
                    request_deserializer=ICampaignManager__pb2.BlockUserRequest.FromString,
                    response_serializer=ICampaignManager__pb2.OperationResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Service.BonusCampaign.Grpc.CampaignManager', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CampaignManager(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def BlockUserInCampaign(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Service.BonusCampaign.Grpc.CampaignManager/BlockUserInCampaign',
            ICampaignManager__pb2.BlockUserRequest.SerializeToString,
            ICampaignManager__pb2.OperationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateOrUpdateCampaign(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Service.BonusCampaign.Grpc.CampaignManager/CreateOrUpdateCampaign',
            ICampaignManager__pb2.CampaignGrpcModel.SerializeToString,
            ICampaignManager__pb2.OperationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllCampaigns(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Service.BonusCampaign.Grpc.CampaignManager/GetAllCampaigns',
            empty__pb2.Empty.SerializeToString,
            ICampaignManager__pb2.GetAllCampaignsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllParams(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Service.BonusCampaign.Grpc.CampaignManager/GetAllParams',
            empty__pb2.Empty.SerializeToString,
            ICampaignManager__pb2.ParamsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetContextsByCampaign(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Service.BonusCampaign.Grpc.CampaignManager/GetContextsByCampaign',
            ICampaignManager__pb2.GetContextsByCampaignRequest.SerializeToString,
            ICampaignManager__pb2.GetContextsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetContextsByClient(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Service.BonusCampaign.Grpc.CampaignManager/GetContextsByClient',
            ICampaignManager__pb2.GetContextsByClientRequest.SerializeToString,
            ICampaignManager__pb2.GetContextsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UnblockUserInCampaign(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Service.BonusCampaign.Grpc.CampaignManager/UnblockUserInCampaign',
            ICampaignManager__pb2.BlockUserRequest.SerializeToString,
            ICampaignManager__pb2.OperationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

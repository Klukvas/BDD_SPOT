{"name": "test_one_step_swap_fixed_true[EUR-BTC]", "status": "failed", "statusDetails": {"message": "AssertionError: assert 0 == 2\n  +0\n  -2", "trace": "request = <FixtureRequest for <Function test_one_step_swap_fixed_true[EUR-BTC]>>, _pytest_bdd_example = {'fromAsset': 'EUR', 'toAsset': 'BTC'}\n\n    @pytest.mark.usefixtures(*args)\n    def scenario_wrapper(request, _pytest_bdd_example):\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n.venv/lib/python3.9/site-packages/pytest_bdd/scenario.py:174: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n.venv/lib/python3.9/site-packages/pytest_bdd/scenario.py:144: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n.venv/lib/python3.9/site-packages/pytest_bdd/scenario.py:114: in _execute_step_function\n    return_value = step_func(**kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nget_balance = ['K5E8PK9Hyfbtlhydgn5dMLUDwuN/urbGo2KYLiV0lvLXSpsueWFZJRLJgEeVjiuXblL4kpBSny0ak/Lklp+YoWus0cQv1efRIFuYtWHbwAcGfVSd+iiA...: 0, 'apr': 0, 'apy': 0, 'assetId': 'LTC', ...}, {'accumulationAmount': 0, 'apr': 0, 'apy': 0, 'assetId': 'USD', ...}]]\nexec = ['adb7d0cd6df34a56a45a294344486b30', {'actualTimeInSecond': 19, 'fromAsset': 'EUR', 'fromAssetVolume': 132.5, 'isExecuted': True, ...}]\n\n    @allure.description('dsadassdsdsdasdasda')\n    @then('User has new record in operation history (fixed True)')\n    def hist(get_balance, exec):\n        counter = 0\n        while True:\n            sleep(5)\n            counter += 1\n            op_history = WalletHistory().operations_history(get_balance[0])\n            assert type(op_history) == list\n            executed_swap = list(\n                filter(\n                    lambda x: x['operationId'] == exec[0],\n                    op_history\n                )\n            )\n>           assert len(executed_swap) == 2\nE           assert 0 == 2\nE             +0\nE             -2\n\ntests/test_swap.py:67: AssertionError"}, "description": "../features/swap.feature: Make a swap with fixed True", "parameters": [{"name": "_pytest_bdd_example", "value": "{'fromAsset': 'EUR', 'toAsset': 'BTC'}"}], "start": 1641413660626, "stop": 1641413681605, "uuid": "2def6d88-859c-4e53-9519-e5c6957f3e75", "historyId": "29aab177458085a43e8296a2155edb2c", "testCaseId": "924aab2ded8f3107dbd8e4ebcfcfcdb2", "fullName": "tests.test_swap#test_one_step_swap_fixed_true", "labels": [{"name": "story", "value": "fixed True"}, {"name": "feature", "value": "swap"}, {"name": "tag", "value": "@pytest.mark.usefixtures"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_swap"}, {"name": "host", "value": "MacBook-Pro-Apple.local"}, {"name": "thread", "value": "58304-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_swap"}]}
{"name": "test_one_step_swap_fixed_false[ETH-EUR]", "status": "failed", "statusDetails": {"message": "AssertionError: assert 0 == 2\n  +0\n  -2", "trace": "request = <FixtureRequest for <Function test_one_step_swap_fixed_false[ETH-EUR]>>, _pytest_bdd_example = {'fromAsset': 'ETH', 'toAsset': 'EUR'}\n\n    @pytest.mark.usefixtures(*args)\n    def scenario_wrapper(request, _pytest_bdd_example):\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n.venv/lib/python3.9/site-packages/pytest_bdd/scenario.py:174: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n.venv/lib/python3.9/site-packages/pytest_bdd/scenario.py:144: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n.venv/lib/python3.9/site-packages/pytest_bdd/scenario.py:114: in _execute_step_function\n    return_value = step_func(**kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nget_balance = ['8u5TrA7n8qkQSuQ6Z24mKR1IwVJMtPQcqQtvCvEFRkvublrEyVdnBeuxd4l0e6azsb6Pjbt/RA2e3+7bWBpMKC93wOICrFkBcLtjCLHSf8AfvmI92MYH...: 0, 'apr': 0, 'apy': 0, 'assetId': 'LTC', ...}, {'accumulationAmount': 0, 'apr': 0, 'apy': 0, 'assetId': 'USD', ...}]]\nexec = ['630f3f08cac84267ab8838f99940f504', {'actualTimeInSecond': 19, 'fromAsset': 'ETH', 'fromAssetVolume': 0.01489657, 'isExecuted': True, ...}]\n\n    @then('User has new record in operation history')\n    def hist(get_balance, exec):\n        counter = 0\n        while True:\n            sleep(5)\n            counter += 1\n            op_history = WalletHistory().operations_history(get_balance[0])\n            assert type(op_history) == list\n            executed_swap = list(\n                filter(\n                    lambda x: x['operationId'] == exec[0],\n                    op_history\n                )\n            )\n>           assert len(executed_swap) == 2\nE           assert 0 == 2\nE             +0\nE             -2\n\ntests/test_swap.py:178: AssertionError"}, "description": "../features/swap.feature: Make a swap with fixed False", "parameters": [{"name": "_pytest_bdd_example", "value": "{'fromAsset': 'ETH', 'toAsset': 'EUR'}"}], "start": 1641413744091, "stop": 1641413763798, "uuid": "7aacdb4a-c1ae-4ac4-a2f1-1f779546399e", "historyId": "5a1d6152650d0d81600fdbf3375e2a52", "testCaseId": "2d80ae57a2c535462ea70e2d1b7cc6ac", "fullName": "tests.test_swap#test_one_step_swap_fixed_false", "labels": [{"name": "story", "value": "fixed False"}, {"name": "feature", "value": "swap"}, {"name": "tag", "value": "@pytest.mark.usefixtures"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_swap"}, {"name": "host", "value": "MacBook-Pro-Apple.local"}, {"name": "thread", "value": "58304-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_swap"}]}
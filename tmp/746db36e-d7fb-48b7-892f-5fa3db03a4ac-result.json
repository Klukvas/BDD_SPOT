{"name": "Make a swap with fixed False [BTC-ETH]", "status": "failed", "statusDetails": {"message": "AssertionError: Expected that quote will be dict, but returned:\n  [{'result': 'KycNotPassed'}].\n  From asset: BTC; Toasset: ETH\nassert <class 'list'> == <class 'dict'>\n  +<class 'list'>\n  -<class 'dict'>", "trace": "request = <FixtureRequest for <Function test_one_step_swap_fixed_false[BTC-ETH]>>, _pytest_bdd_example = {'fromAsset': 'BTC', 'toAsset': 'ETH'}\n\n    @pytest.mark.usefixtures(*args)\n    def scenario_wrapper(request, _pytest_bdd_example):\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n.venv/lib/python3.9/site-packages/pytest_bdd/scenario.py:174: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n.venv/lib/python3.9/site-packages/pytest_bdd/scenario.py:144: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n.venv/lib/python3.9/site-packages/pytest_bdd/scenario.py:114: in _execute_step_function\n    return_value = step_func(**kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nget_balance = ['+fcqaTRtwC2TRmc3wtPTL1yWclZAFhzeseJ8YC4sbDDKuhISxMqO9KEvSyamZ+e3uzQjkcy1GAha4nSAbEX9uYNP3HrzzF7Nq45vgAyoElbxIgbs023P...: 0, 'apr': 0, 'apy': 0, 'assetId': 'LTC', ...}, {'accumulationAmount': 0, 'apr': 0, 'apy': 0, 'assetId': 'USD', ...}]]\nfromAsset = 'BTC', toAsset = 'ETH'\n\n    @when(parsers.parse('User gets swap quote from {fromAsset} to {toAsset}'), target_fixture=\"get_quote\")\n    def get_quote(get_balance, fromAsset, toAsset):\n        swapApi = Swap()\n        quote = swapApi.get_quote(\n            get_balance[0],\n            fromAsset,\n            toAsset,\n            settings.to_balance[toAsset]/2,\n            False,\n        )\n>       assert type(quote) == dict, f'Expected that quote will be dict, but returned:\\n{quote}.\\nFrom asset: {fromAsset}; Toasset: {toAsset}'\nE       AssertionError: Expected that quote will be dict, but returned:\nE         [{'result': 'KycNotPassed'}].\nE         From asset: BTC; Toasset: ETH\nE       assert <class 'list'> == <class 'dict'>\nE         +<class 'list'>\nE         -<class 'dict'>\n\ntests/test_swap.py:145: AssertionError"}, "steps": [{"name": "Given Some crypto on balance", "status": "passed", "start": 1641481320215, "stop": 1641481321981}, {"name": "When User gets swap quote from BTC to ETH", "status": "failed", "statusDetails": {"message": "Expected that quote will be dict, but returned:\n  [{'result': 'KycNotPassed'}].\n  From asset: BTC; Toasset: ETH\nassert <class 'list'> == <class 'dict'>\n  +<class 'list'>\n  -<class 'dict'>", "trace": "AssertionError: Expected that quote will be dict, but returned:\n  [{'result': 'KycNotPassed'}].\n  From asset: BTC; Toasset: ETH\nassert <class 'list'> == <class 'dict'>\n  +<class 'list'>\n  -<class 'dict'>\n"}, "start": 1641481321982, "stop": 1641481322247}], "parameters": [{"name": "_pytest_bdd_example", "value": {"fromAsset": "BTC", "toAsset": "ETH"}}], "start": 1641481317780, "stop": 1641481322247, "uuid": "3f1f83e1-54ac-16d2-b6ad-d497e884a2d0", "historyId": "3f1f83e154ac16d2b6add497e884a2d0", "fullName": "features/swap.feature:Make a swap with fixed False", "labels": [{"name": "host", "value": "MacBook-Pro-Apple.local"}, {"name": "thread", "value": "3611-MainThread"}, {"name": "framework", "value": "pytest-bdd"}, {"name": "language", "value": "cpython3"}, {"name": "feature", "value": "Swap"}]}
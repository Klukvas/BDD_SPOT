{"name": "Internal withdrawal [LTC-tltc1qz3qgnmt9fyd77rv4f0jh3aer0yu6mlgje7jx0a-LTC-0]", "status": "failed", "statusDetails": {"message": "AssertionError: Expected that response will be dict, but gets: <class 'list'>\n  TransferData: [{'result': 'BlockchainIsNotConfigured'}, 200].Asset:LTC\tAmount: 0.65\nassert <class 'list'> == <class 'dict'>\n  +<class 'list'>\n  -<class 'dict'>", "trace": "request = <FixtureRequest for <Function test_success_withdrawal_email[LTC-tltc1qz3qgnmt9fyd77rv4f0jh3aer0yu6mlgje7jx0a-LTC-0]>>\n_pytest_bdd_example = {'address': 'tltc1qz3qgnmt9fyd77rv4f0jh3aer0yu6mlgje7jx0a', 'asset': 'LTC', 'feeAmount': '0', 'feeAsset': 'LTC'}\n\n    @pytest.mark.usefixtures(*args)\n    def scenario_wrapper(request, _pytest_bdd_example):\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n.venv/lib/python3.9/site-packages/pytest_bdd/scenario.py:174: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n.venv/lib/python3.9/site-packages/pytest_bdd/scenario.py:144: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n.venv/lib/python3.9/site-packages/pytest_bdd/scenario.py:114: in _execute_step_function\n    return_value = step_func(**kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nauth = <function auth.<locals>.get_tokens at 0x7ff7ebcbadc0>, asset = 'LTC', address = 'tltc1qz3qgnmt9fyd77rv4f0jh3aer0yu6mlgje7jx0a'\n\n    @given(parsers.parse('User send withdrawal request wiht asset: {asset}, to address: {address}'), target_fixture='make_withdrawal')\n    def make_withdrawal(auth, asset, address):\n        token = auth(settings.template_tests_email, settings.template_tests_password )\n        assert type(token) == str\n        amount = settings.balance_asssets[asset] / 2\n        event_date = datetime.strptime(\n            datetime.today().strftime('%d-%m-%Y %H:%M:%S'),\n            '%d-%m-%Y %H:%M:%S'\n        )\n        withdrawalData = Blockchain().withdrawal(\n            token, asset, amount, address\n        )\n>       assert type(withdrawalData) == dict, f'Expected that response will be dict, but gets: {type(withdrawalData)}\\nTransferData: {withdrawalData}.Asset:{asset}\\tAmount: {amount}'\nE       AssertionError: Expected that response will be dict, but gets: <class 'list'>\nE         TransferData: [{'result': 'BlockchainIsNotConfigured'}, 200].Asset:LTC\tAmount: 0.65\nE       assert <class 'list'> == <class 'dict'>\nE         +<class 'list'>\nE         -<class 'dict'>\n\ntests/test_emails.py:180: AssertionError"}, "steps": [{"name": "Given User send withdrawal request wiht asset: LTC, to address: tltc1qz3qgnmt9fyd77rv4f0jh3aer0yu6mlgje7jx0a", "status": "failed", "statusDetails": {"message": "Expected that response will be dict, but gets: <class 'list'>\n  TransferData: [{'result': 'BlockchainIsNotConfigured'}, 200].Asset:LTC\tAmount: 0.65\nassert <class 'list'> == <class 'dict'>\n  +<class 'list'>\n  -<class 'dict'>", "trace": "AssertionError: Expected that response will be dict, but gets: <class 'list'>\n  TransferData: [{'result': 'BlockchainIsNotConfigured'}, 200].Asset:LTC\tAmount: 0.65\nassert <class 'list'> == <class 'dict'>\n  +<class 'list'>\n  -<class 'dict'>\n"}, "start": 1641480875467, "stop": 1641480876663}], "parameters": [{"name": "_pytest_bdd_example", "value": {"asset": "LTC", "address": "tltc1qz3qgnmt9fyd77rv4f0jh3aer0yu6mlgje7jx0a", "feeAsset": "LTC", "feeAmount": "0"}}], "start": 1641480873749, "stop": 1641480876663, "uuid": "66f993e4-938c-b0e4-7d5d-a9df25724632", "historyId": "66f993e4938cb0e47d5da9df25724632", "fullName": "features/receive_email.feature:Internal withdrawal", "labels": [{"name": "host", "value": "MacBook-Pro-Apple.local"}, {"name": "thread", "value": "3611-MainThread"}, {"name": "framework", "value": "pytest-bdd"}, {"name": "language", "value": "cpython3"}, {"name": "feature", "value": "Emails receive"}]}
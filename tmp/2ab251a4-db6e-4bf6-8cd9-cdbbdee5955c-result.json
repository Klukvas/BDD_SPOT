{"name": "Make a transfer by phone [ETH]", "status": "failed", "statusDetails": {"message": "AssertionError: Expected that response will be dict, but gets: <class 'list'>\n  TransferData: [{'result': 'KycNotPassed'}, 200].Asset:ETH\tAmount: 0.035\nassert <class 'list'> == <class 'dict'>\n  +<class 'list'>\n  -<class 'dict'>", "trace": "request = <FixtureRequest for <Function test_transfer_by_phone[ETH]>>, _pytest_bdd_example = {'asset': 'ETH'}\n\n    @pytest.mark.usefixtures(*args)\n    def scenario_wrapper(request, _pytest_bdd_example):\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n.venv/lib/python3.9/site-packages/pytest_bdd/scenario.py:174: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n.venv/lib/python3.9/site-packages/pytest_bdd/scenario.py:144: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n.venv/lib/python3.9/site-packages/pytest_bdd/scenario.py:114: in _execute_step_function\n    return_value = step_func(**kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nget_balance = ['58wVPjzAtNLko/QubPPA37n2XU84j0/OQLKHjDI4zhEtQsmjb5A2A0F2GcyXvAIyoDtkUSlRfv21LHzeaLXiO4RCEvAmW/XjfeTgbk1iHerf9Gw0zYfz...: 0, 'apr': 0, 'apy': 0, 'assetId': 'LTC', ...}, {'accumulationAmount': 0, 'apr': 0, 'apy': 0, 'assetId': 'USD', ...}]]\nasset = 'ETH'\n\n    @when(parsers.parse('User send {asset} to phone number'), target_fixture=\"send_transfer\")\n    def send_transfer(get_balance, asset):\n        transferApi = Transfer()\n        transferData = transferApi.create_transfer(\n            get_balance[0],\n            settings.me_tests_transfer_to_phone,\n            asset,\n            settings.balance_asssets[asset] / 2\n        )\n>       assert type(transferData) == dict, f'Expected that response will be dict, but gets: {type(transferData)}\\nTransferData: {transferData}.Asset:{asset}\\tAmount: {settings.balance_asssets[asset] / 2}'\nE       AssertionError: Expected that response will be dict, but gets: <class 'list'>\nE         TransferData: [{'result': 'KycNotPassed'}, 200].Asset:ETH\tAmount: 0.035\nE       assert <class 'list'> == <class 'dict'>\nE         +<class 'list'>\nE         -<class 'dict'>\n\ntests/test_transfer.py:30: AssertionError"}, "steps": [{"name": "Given Some crypto on balance", "status": "passed", "start": 1641481452177, "stop": 1641481453728}, {"name": "When User send ETH to phone number", "status": "failed", "statusDetails": {"message": "Expected that response will be dict, but gets: <class 'list'>\n  TransferData: [{'result': 'KycNotPassed'}, 200].Asset:ETH\tAmount: 0.035\nassert <class 'list'> == <class 'dict'>\n  +<class 'list'>\n  -<class 'dict'>", "trace": "AssertionError: Expected that response will be dict, but gets: <class 'list'>\n  TransferData: [{'result': 'KycNotPassed'}, 200].Asset:ETH\tAmount: 0.035\nassert <class 'list'> == <class 'dict'>\n  +<class 'list'>\n  -<class 'dict'>\n"}, "start": 1641481453729, "stop": 1641481453999}], "parameters": [{"name": "_pytest_bdd_example", "value": {"asset": "ETH"}}], "start": 1641481450311, "stop": 1641481453999, "uuid": "72b6373d-9a7c-6aef-0b30-56bc51aa84c1", "historyId": "72b6373d9a7c6aef0b3056bc51aa84c1", "fullName": "features/transfer.feature:Make a transfer by phone", "labels": [{"name": "host", "value": "MacBook-Pro-Apple.local"}, {"name": "thread", "value": "3611-MainThread"}, {"name": "framework", "value": "pytest-bdd"}, {"name": "language", "value": "cpython3"}, {"name": "feature", "value": "Transfer"}]}
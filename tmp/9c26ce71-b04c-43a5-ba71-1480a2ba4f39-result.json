{"name": "Make a internalWithdrawal [ETH-0x3472b8126294D67b1586519425Ea3b98f32ABD05]", "status": "failed", "statusDetails": {"message": "AssertionError: Expected type dict but returned:\n  [{'result': 'KycNotPassed'}, 200]\nassert <class 'list'> == <class 'dict'>\n  +<class 'list'>\n  -<class 'dict'>", "trace": "request = <FixtureRequest for <Function test_transfer_by_address[ETH-0x3472b8126294D67b1586519425Ea3b98f32ABD05]>>\n_pytest_bdd_example = {'address': '0x3472b8126294D67b1586519425Ea3b98f32ABD05', 'assetId': 'ETH'}\n\n    @pytest.mark.usefixtures(*args)\n    def scenario_wrapper(request, _pytest_bdd_example):\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n.venv/lib/python3.9/site-packages/pytest_bdd/scenario.py:174: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n.venv/lib/python3.9/site-packages/pytest_bdd/scenario.py:144: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n.venv/lib/python3.9/site-packages/pytest_bdd/scenario.py:114: in _execute_step_function\n    return_value = step_func(**kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nget_balance = ['+FbwL/Zmq8swDYwc1ahcFknsR0HZOsWPzEKJ3kSIjopDcE/jNRg9h+hIZlZQ3QdDDbrwYbNua5Cy4d/1vIZirHD15dp5V6bsasDc1g/aoWCdF2niUmcA...: 0, 'apr': 0, 'apy': 0, 'assetId': 'LTC', ...}, {'accumulationAmount': 0, 'apr': 0, 'apy': 0, 'assetId': 'USD', ...}]]\nasset = 'ETH', address = '0x3472b8126294D67b1586519425Ea3b98f32ABD05'\n\n    @when(parsers.parse('User send {asset} to {address}'), target_fixture=\"create_withdrawal\")\n    def create_withdrawal(get_balance, asset, address):\n        transferData = Blockchain().withdrawal(\n            get_balance[0],\n            asset,\n            settings.balance_asssets[asset] / 2,\n            address\n        )\n>       assert type(transferData) == dict, f'Expected type dict but returned:\\n{transferData}'\nE       AssertionError: Expected type dict but returned:\nE         [{'result': 'KycNotPassed'}, 200]\nE       assert <class 'list'> == <class 'dict'>\nE         +<class 'list'>\nE         -<class 'dict'>\n\ntests/test_transfer.py:138: AssertionError"}, "steps": [{"name": "Given Some crypto on balance", "status": "passed", "start": 1641481590378, "stop": 1641481592475}, {"name": "When User send ETH to 0x3472b8126294D67b1586519425Ea3b98f32ABD05", "status": "failed", "statusDetails": {"message": "Expected type dict but returned:\n  [{'result': 'KycNotPassed'}, 200]\nassert <class 'list'> == <class 'dict'>\n  +<class 'list'>\n  -<class 'dict'>", "trace": "AssertionError: Expected type dict but returned:\n  [{'result': 'KycNotPassed'}, 200]\nassert <class 'list'> == <class 'dict'>\n  +<class 'list'>\n  -<class 'dict'>\n"}, "start": 1641481592476, "stop": 1641481592747}], "parameters": [{"name": "_pytest_bdd_example", "value": {"assetId": "ETH", "address": "0x3472b8126294D67b1586519425Ea3b98f32ABD05"}}], "start": 1641481590377, "stop": 1641481592748, "uuid": "e577111e-66fc-1a87-be48-34faf3860cc9", "historyId": "e577111e66fc1a87be4834faf3860cc9", "fullName": "features/transfer.feature:Make a internalWithdrawal", "labels": [{"name": "host", "value": "MacBook-Pro-Apple.local"}, {"name": "thread", "value": "3611-MainThread"}, {"name": "framework", "value": "pytest-bdd"}, {"name": "language", "value": "cpython3"}, {"name": "feature", "value": "Transfer"}]}